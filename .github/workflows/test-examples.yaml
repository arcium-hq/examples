name: Test Examples
on:
  push:
    branches: [main]
  pull_request:
    branches: [main]

env:
  ARCUP_USER: testnet_user_20842437
  ARCUP_TOKEN: ${{ secrets.ARCUP_TOKEN }}

jobs:
  test-examples:
    name: Test Examples
    runs-on: ubuntu-24.04
    steps:
      - uses: actions/checkout@v4

      # Ensure Docker is running
      - name: Start Docker daemon
        run: |
          sudo systemctl start docker
          sudo systemctl status docker
          docker info
          echo "Available images:"
          docker images

      # Setup all required tools with caching
      - uses: ./.github/actions/setup/
      - uses: ./.github/actions/setup-solana/
      - uses: ./.github/actions/setup-anchor/
      - uses: ./.github/actions/setup-arcium/
        with:
          ARCUP_USER: testnet_user_20842437
          ARCUP_TOKEN: ${{ secrets.ARCUP_TOKEN }}

      - name: Find example directories
        id: find-examples
        run: |
          echo "examples=$(find . -type f -name "Anchor.toml" -exec dirname {} \; | jq -R -s -c 'split("\n")[:-1]')" >> $GITHUB_OUTPUT
        shell: bash

      - name: Load cached cargo registry
        uses: actions/cache/restore@v4
        with:
          path: |
            ~/.cargo/registry
            ~/.cargo/git
            ./*/target
            ./*/*/target
          key: ${{ runner.os }}-cargo-examples-${{ hashFiles('**/Cargo.lock') }}
          restore-keys: |
            ${{ runner.os }}-cargo-examples-

      - name: Test examples
        run: |
          EXAMPLES=$(echo '${{ steps.find-examples.outputs.examples }}' | jq -r '.[]')
          for example in $EXAMPLES; do
            echo "Testing $example"
            
            # Setup computation folders and vault
            echo "Setting up computation folders and vault..."
            rm -rf /tmp/computation_folder_0
            rm -rf /tmp/computation_folder_1
            rm -rf /tmp/computation_folder_2
            rm -rf /tmp/vault
            mkdir /tmp/vault

            manticore_string="manticore"
            if [[ "$example" = *"$manticore_string"* ]]; then
              echo "Manticore test"
              cp -r ./examples/manticore/resources/computation_folder /tmp/computation_folder_0 
              rm -r /tmp/computation_folder_0/player-1

              cp -r ./examples/manticore/resources/computation_folder /tmp/computation_folder_1 
              rm -r /tmp/computation_folder_1/player-0

              cp -r ./examples/manticore/resources/computation_folder /tmp/computation_folder_2 
              rm -r /tmp/computation_folder_2/player-0
              rm -r /tmp/computation_folder_2/player-1
            else
              echo "Cerberus test"
              mkdir /tmp/computation_folder_0
              mkdir /tmp/computation_folder_1
              mkdir /tmp/computation_folder_2
            fi
            
            pushd $example
            yarn install
            arcium build
            
            # Run the test and capture logs
            echo "Running arcium test..."
            timeout 20m arcium test || EXIT_CODE=$?
            echo "Most recent docker container id: $(docker ps -q -l)"
            docker logs $(docker ps -q -l)
            echo "=== Docker Containers ==="
            docker ps -a
            echo "=== Callback Server Logs ==="
            cat artifacts/callback_server.log || true
            echo "=== Docker Compose Logs ==="
            docker compose -f artifacts/docker-compose-arx-env.yml logs || true
            popd
            
            # if [ -n "$EXIT_CODE" ]; then
            #   exit $EXIT_CODE
            # fi
          done
        shell: bash
      - uses: lhotari/action-upterm@v1
      - name: Save cargo registry
        uses: actions/cache/save@v4
        with:
          path: |
            ~/.cargo/registry
            ~/.cargo/git
            ./*/target
            ./*/*/target
          key: ${{ runner.os }}-cargo-examples-${{ hashFiles('**/Cargo.lock') }}
